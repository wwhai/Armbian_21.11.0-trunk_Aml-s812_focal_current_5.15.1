From 5ba2ae661149d1735f843ade079593914653bf3d Mon Sep 17 00:00:00 2001
From: Alex Bee <knaerzche@gmail.com>
Date: Mon, 16 Nov 2020 18:12:54 +0100
Subject: [PATCH] clk: rockchip: rk3188 add more supported dpll rates

Signed-off-by: Alex Bee <knaerzche@gmail.com>
---
 drivers/clk/rockchip/clk_rk3188.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/clk/rockchip/clk_rk3188.c b/drivers/clk/rockchip/clk_rk3188.c
index aacc8cf2d1..1e950309ea 100644
--- a/drivers/clk/rockchip/clk_rk3188.c
+++ b/drivers/clk/rockchip/clk_rk3188.c
@@ -126,6 +126,9 @@ static int rkclk_configure_ddr(struct rk3188_cru *cru, struct rk3188_grf *grf,
 {
 	static const struct pll_div dpll_cfg[] = {
 		{.nf = 75, .nr = 1, .no = 6},
+		{.nf = 300, .nr = 9, .no = 2},
+		{.nf = 328, .nr = 9, .no = 2},
+		{.nf = 330, .nr = 9, .no = 2},
 		{.nf = 400, .nr = 9, .no = 2},
 		{.nf = 500, .nr = 9, .no = 2},
 		{.nf = 100, .nr = 3, .no = 1},
@@ -136,15 +139,24 @@ static int rkclk_configure_ddr(struct rk3188_cru *cru, struct rk3188_grf *grf,
 	case 300000000:
 		cfg = 0;
 		break;
-	case 533000000:	/* actually 533.3P MHz */
+	case 400000000:
 		cfg = 1;
 		break;
-	case 666000000:	/* actually 666.6P MHz */
+	case 433000000:
 		cfg = 2;
 		break;
-	case 800000000:
+	case 440000000:
 		cfg = 3;
 		break;
+	case 533000000:	/* actually 533.3P MHz */
+		cfg = 4;
+		break;
+	case 666000000:	/* actually 666.6P MHz */
+		cfg = 5;
+		break;
+	case 800000000:
+		cfg = 6;
+		break;
 	default:
 		debug("Unsupported SDRAM frequency");
 		return -EINVAL;

From 53b020984e361b6fd7e2d3e5e979dce0072f79ff Mon Sep 17 00:00:00 2001
From: Alex Bee <knaerzche@gmail.com>
Date: Mon, 16 Nov 2020 22:34:12 +0100
Subject: [PATCH] sdram: rockchip rk3188: set zqcr as per vendor source

Set DS/ODT to values as per vendor source - otherwise ddr training may fail.
Debug: print some debug messages to be able to compare training result.

Signed-off-by: Alex Bee <knaerzche@gmail.com>
---
 drivers/ram/rockchip/sdram_rk3188.c | 37 +++++++++++++++++++++++------
 1 file changed, 30 insertions(+), 7 deletions(-)

diff --git a/drivers/ram/rockchip/sdram_rk3188.c b/drivers/ram/rockchip/sdram_rk3188.c
index 06f9eba1a5..8313e45616 100644
--- a/drivers/ram/rockchip/sdram_rk3188.c
+++ b/drivers/ram/rockchip/sdram_rk3188.c
@@ -639,6 +639,7 @@ static int sdram_col_row_detect(struct dram_info *dram, int channel,
 	/* Detect col */
 	for (col = 11; col >= 9; col--) {
 		writel(0, CONFIG_SYS_SDRAM_BASE);
+		printf("col :%d\n", col);
 		addr = CONFIG_SYS_SDRAM_BASE +
 			(1 << (col + sdram_params->ch[channel].bw - 1));
 		writel(TEST_PATTEN, addr);
@@ -647,7 +648,7 @@ static int sdram_col_row_detect(struct dram_info *dram, int channel,
 			break;
 	}
 	if (col == 8) {
-		printf("Col detect error\n");
+		printf("Col detect error: %d\n", col);
 		ret = -EINVAL;
 		goto out;
 	} else {
@@ -673,7 +674,7 @@ static int sdram_col_row_detect(struct dram_info *dram, int channel,
 	} else {
 		sdram_params->ch[channel].cs1_row = row;
 		sdram_params->ch[channel].row_3_4 = 0;
-		debug("chn %d col %d, row %d\n", channel, col, row);
+		printf("chn %d col %d, row %d\n", channel, col, row);
 		sdram_params->ch[channel].cs0_row = row;
 	}
 
@@ -716,6 +717,8 @@ static int sdram_init(struct dram_info *dram,
 	int channel;
 	int zqcr;
 	int ret;
+	int j;
+	u32 gsr, dqstr;
 
 	if ((sdram_params->base.dramtype == DDR3 &&
 	     sdram_params->base.ddr_freq > 800000000)) {
@@ -766,10 +769,10 @@ static int sdram_init(struct dram_info *dram,
 		clrsetbits_le32(&publ->pgcr, 0xF << 18,
 				(sdram_params->ch[channel].rank | 1) << 18);
 
-		/* DS=40ohm,ODT=155ohm */
+		/* DS=34ohm,ODT=171ohm */
 		zqcr = 1 << ZDEN_SHIFT | 2 << PU_ONDIE_SHIFT |
-			2 << PD_ONDIE_SHIFT | 0x19 << PU_OUTPUT_SHIFT |
-			0x19 << PD_OUTPUT_SHIFT;
+			2 << PD_ONDIE_SHIFT | 0xb << PU_OUTPUT_SHIFT |
+			0xb << PD_OUTPUT_SHIFT;
 		writel(zqcr, &publ->zq1cr[0]);
 		writel(zqcr, &publ->zq0cr[0]);
 
@@ -796,9 +799,29 @@ static int sdram_init(struct dram_info *dram,
 	ret = sdram_get_niu_config(sdram_params);
 	if (ret)
 		goto error;
-
 	dram_all_config(dram, sdram_params);
-	debug("%s done\n", __func__);
+	printf("%s done\n", __func__);
+	for (channel = 0; channel < 1; channel++) {
+		const struct chan_info *chan = &dram->chan[channel];
+		struct rk3288_ddr_publ *publ = chan->publ;
+
+		for(j=0; j<4; j++) {
+			gsr = publ->datx8[j].dxgsr[0];
+			dqstr =  publ->datx8[j].dxdqstr;
+			printf("DTONE=0x%x, DTERR=0x%x, DTIERR=0x%x, DTPASS=0x%x, DGSL=%d extra clock, DGPS=%d\n", \
+				  (gsr&0xF), ((gsr>>4)&0xF), ((gsr>>8)&0xF), ((gsr>>13)&0xFFF), (dqstr&0x7), ((((dqstr>>12)&0x3)+1)*90));
+
+		}
+		printf("ZERR=%x, ZDONE=%x, ZPD=0x%x, ZPU=0x%x, OPD=0x%x, OPU=0x%x\n", \
+                                                (publ->zq0sr[0]>>30)&0x1, \
+                                                (publ->zq0sr[0]>>31)&0x1, \
+                                                publ->zq0sr[1]&0x3,\
+                                                (publ->zq0sr[1]>>2)&0x3,\
+                                                (publ->zq0sr[1]>>4)&0x3,\
+                                                (publ->zq0sr[1]>>6)&0x3);
+		printf("DRV Pull-Up=0x%x, DRV Pull-Dwn=0x%x\n", publ->zq0sr[0]&0x1F, (publ->zq0sr[0]>>5)&0x1F);
+		printf("ODT Pull-Up=0x%x, ODT Pull-Dwn=0x%x\n", (publ->zq0sr[0]>>10)&0x1F, (publ->zq0sr[0]>>15)&0x1F);
+	}
 
 	return 0;
 error:
